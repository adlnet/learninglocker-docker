worker_processes auto;

events {
    worker_connections  1024;
}

http {
    include           mime.types;
    default_type      application/octet-stream;
    sendfile          on;
    keepalive_timeout 65;

    proxy_buffer_size   128k;
    proxy_buffers       4 256k;
    proxy_busy_buffers_size 256k;

    client_body_in_file_only clean;
    client_body_buffer_size 32;
    
    client_max_body_size 300M;

    server {
        listen       80;
        server_name  $DOMAIN_NAME;

        location / {
            return 301 https://$server_name$request_uri;
        }

        location ~ /.well-known/acme-challenge {
            allow   all;
            root    /usr/share/nginx/html;
        }
    }

    server {
        listen       443 ssl;
        server_name  $DOMAIN_NAME;

        ssl_certificate     /usr/share/keys/live/$DOMAIN_NAME/fullchain.pem;
        ssl_certificate_key /usr/share/keys/live/$DOMAIN_NAME/privkey.pem;

        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers         HIGH:!aNULL:!MD5;

        ssl_verify_client off;
        proxy_ssl_server_name on;

        client_body_in_file_only clean;
        client_body_buffer_size 32K;

        client_max_body_size 300M;

        sendfile on;

        send_timeout           300;
        proxy_connect_timeout  300;
        proxy_send_timeout     300;
        proxy_read_timeout     300;
        root /volumed/opt/learninglocker/ui/dist/public;

        # xAPI endpoints
#        location ~* ^/data/xAPI(.*)$ {
#                 proxy_pass http://xapi:8081/data/xAPI$1$is_args$args;
#        }

        location ^~ /data/xAPI {
            include proxy_headers.conf;
            proxy_pass http://xapi:8081/data/xAPI;
        }

        location ^~ /data/xapi {
            include proxy_headers.conf;
            proxy_pass http://xapi:8081/data/xapi;
        }

        # API endpoints
        location = /api {
	          rewrite /api / break;
	          proxy_redirect off;
	          
	          proxy_pass http://api:8080;
        }

        location ~* ^/api(.*)$ {
	        proxy_http_version 1.1;
	        proxy_set_header Upgrade $http_upgrade;
	        proxy_set_header Connection 'upgrade';
	        proxy_set_header Host $host;
	        proxy_cache_bypass $http_upgrade;
	        
	        proxy_pass http://api:8080$1$is_args$args;
        }

        # All other traffic directed to statics or Node server
        location / {
	          try_files $uri @node_server;
        }

        # Node UI server
        location @node_server {
	          proxy_http_version 1.1;
	          proxy_set_header Upgrade $http_upgrade;
	          proxy_set_header Connection 'upgrade';
	          proxy_set_header Host $host;
	          proxy_cache_bypass $http_upgrade;
	          
	          proxy_pass http://ui:3000;
        }

        # Load configuration files for the default server block.
        error_page 404 /404.html;
        location = /40x.html {
	          root /usr/share/nginx/html;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
	          root /usr/share/nginx/html;
        }

        # We don't need .ht files with nginx.
        location ~ /\.ht {
	          deny all;
        }
    }
}
